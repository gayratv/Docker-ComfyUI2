ARG BASE_IMAGE="nvidia/cuda:12.8.1-cudnn-runtime-ubuntu22.04"
FROM ${BASE_IMAGE}

RUN apt-get update  \
    && apt-get install -y \
    software-properties-common \
    curl \
    wget \
    aria2 \
    git \
    mc \
    nano \
    ffmpeg \
    nethogs \
    net-tools \
    gpg-agent \
    tmux \
    locales \
    build-essential g++  cmake ninja-build git pkg-config libopenblas-dev libomp-dev \
    libjpeg-dev libpng-dev libtiff-dev libavcodec-dev libavformat-dev libswscale-dev \
    libv4l-dev libxvidcore-dev libx264-dev libgtk-3-dev libatlas-base-dev gfortran \
    && rm -rf /var/lib/apt/lists/*

# Set non-interactive mode to prevent timezone selection prompts
ENV DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC
RUN apt-get update \
    && apt-get install -y tzdata \
    && ln -fs /usr/share/zoneinfo/Etc/UTC /etc/localtime  \
    && dpkg-reconfigure -f noninteractive tzdata \
    && echo "en_US.UTF-8 UTF-8" > /etc/locale.gen \
    && locale-gen \
    && update-locale LANG=en_US.UTF-8 \
    && curl -LsSf https://astral.sh/uv/install.sh | sh \
    && rm -rf /var/lib/apt/lists/*

ENV LANG=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8
ENV PATH="/root/.local/bin:$PATH"

# Добавление репозитория deadsnakes и установка Python 3.11

# Install dependencies
RUN apt-get update \
    && apt-get install -y software-properties-common \
    && add-apt-repository ppa:deadsnakes/ppa -y \
    && apt-get update \
    && apt-get install -y python3.11 python3.11-dev python3.11-venv \
    && rm -rf /var/lib/apt/lists/*

# Install pip and wheel using ensurepip
RUN python3.11 -m ensurepip \
    && python3.11 -m pip install --upgrade pip setuptools wheel \
    && rm -rf /var/lib/apt/lists/*

# Verify installation
# RUN python3.11 --version && pip3.11 --version

RUN wget https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64.deb \
    && dpkg -i cloudflared-linux-amd64.deb \
    && rm -rf /var/lib/apt/lists/*


RUN update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1

# Добавление alias в .bashrc
RUN printf "alias py='python3'\nalias python='python3'\nalias ptest='cd /workspace/VPS-copy && py pytorch-test.py'\n" >> ~/.bashrc

#Установка PyTorch:
#RUN uv pip install --pre torch torchvision torchaudio --index-url https://download.pytorch.org/whl/nightly/cu128 \
#    && pip3 install numpy pytz \
#    && pip3 install --pre xFormers \
#    && rm -rf ~/.cache/pip

#RUN --mount=type=cache,target=/root/repo-cache \
#    --mount=type=cache,target=/root/pip-cache \
#    PIP_CACHE_DIR=/root/pip-cache \
#    process_repos-install-req.sh "$NODES" \
#    && pip install --cache-dir=/root/pip-cache onnxruntime-gpu \

RUN --mount=type=cache,target=/root/pip-cache2 \
    uv pip install --cache-dir=/root/pip-cache2 --system --index-strategy unsafe-best-match \
    --pre torch torchvision torchaudio --index-url https://download.pytorch.org/whl/nightly/cu128 \
    && rm -rf ~/.cache/pip

# Установка xformers
RUN --mount=type=cache,target=/root/pip-cache2 \
    uv pip install  --cache-dir=/root/pip-cache2 --system --pre xformers pytz \
    && rm -rf ~/.cache/pip


WORKDIR /workspace
COPY VPS-copy .

# Команда по умолчанию
CMD ["bash"]
